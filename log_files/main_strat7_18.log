ERROR:__main__:2022-11-26 15:50:11,704:invalid literal for int() with base 10: 'p'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 110, in <module>
    strat_obj_dict[strobj] = Strategy7(event_id=eid, min_buy_qty=5, avg_qty_multiplier=5, getOutSellPriceDiff="dynamic")
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 42, in __init__
    self.priceatri = PriceAttri(self.event_id, self.apitype, self.userid)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\price_attributes.py", line 7, in __init__
    super().__init__(eid, apitype=None, userid=None)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\event_params.py", line 15, in __init__
    self.eds = EventDataStatic(apitype, userid)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\event_data_static.py", line 16, in __init__
    self.api_obj = ApiCaller(apitype, userid)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\api_caller.py", line 22, in __init__
    self.userid = int(input("Enter userid (0 for default): "))
ValueError: invalid literal for int() with base 10: 'p'
ERROR:__main__:2022-11-26 15:53:52,618:unsupported operand type(s) for -: 'float' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 115, in <module>
    strat_obj_dict[i].initialise()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 501, in initialise
    self._get_situation()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 273, in _get_situation
    diff_fair_best_y = self.yes_fair_price - self.priceatri.yes_best_price
TypeError: unsupported operand type(s) for -: 'float' and 'NoneType'
ERROR:__main__:2022-11-26 16:37:18,541:unsupported operand type(s) for -: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 517, in update
    self._get_situation()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 273, in _get_situation
    diff_fair_best_y = self.yes_fair_price - self.priceatri.yes_best_price
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
ERROR:__main__:2022-11-26 16:39:28,927:unsupported operand type(s) for -: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 517, in update
    self._get_situation()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 273, in _get_situation
    diff_fair_best_y = self.yes_fair_price - self.priceatri.yes_best_price
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
ERROR:__main__:2022-11-26 16:41:32,900:unsupported operand type(s) for -: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 517, in update
    self._get_situation()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 273, in _get_situation
    diff_fair_best_y = self.yes_fair_price - self.priceatri.yes_best_price
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
ERROR:__main__:2022-11-26 16:43:35,813:unsupported operand type(s) for -: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 517, in update
    self._get_situation()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 273, in _get_situation
    diff_fair_best_y = self.yes_fair_price - self.priceatri.yes_best_price
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
ERROR:__main__:2022-11-26 16:45:40,556:unsupported operand type(s) for -: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 517, in update
    self._get_situation()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 273, in _get_situation
    diff_fair_best_y = self.yes_fair_price - self.priceatri.yes_best_price
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
ERROR:__main__:2022-11-26 16:47:55,142:unsupported operand type(s) for -: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 517, in update
    self._get_situation()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 273, in _get_situation
    diff_fair_best_y = self.yes_fair_price - self.priceatri.yes_best_price
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
ERROR:__main__:2022-11-26 16:50:08,745:unsupported operand type(s) for -: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 517, in update
    self._get_situation()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 273, in _get_situation
    diff_fair_best_y = self.yes_fair_price - self.priceatri.yes_best_price
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
ERROR:__main__:2022-11-26 16:52:22,317:unsupported operand type(s) for -: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 517, in update
    self._get_situation()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 273, in _get_situation
    diff_fair_best_y = self.yes_fair_price - self.priceatri.yes_best_price
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
ERROR:__main__:2022-11-26 21:53:36,062:unsupported operand type(s) for -: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 115, in <module>
    strat_obj_dict[i].initialise()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 501, in initialise
    self._get_situation()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 273, in _get_situation
    diff_fair_best_y = self.yes_fair_price - self.priceatri.yes_best_price
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
ERROR:__main__:2022-11-26 21:53:41,084:unsupported operand type(s) for -: 'float' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 115, in <module>
    strat_obj_dict[i].initialise()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 501, in initialise
    self._get_situation()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 273, in _get_situation
    diff_fair_best_y = self.yes_fair_price - self.priceatri.yes_best_price
TypeError: unsupported operand type(s) for -: 'float' and 'NoneType'
ERROR:__main__:2022-11-26 21:53:42,016:unsupported operand type(s) for -: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 517, in update
    self._get_situation()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 273, in _get_situation
    diff_fair_best_y = self.yes_fair_price - self.priceatri.yes_best_price
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
ERROR:__main__:2022-11-26 21:53:43,258:unsupported operand type(s) for -: 'float' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 517, in update
    self._get_situation()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 273, in _get_situation
    diff_fair_best_y = self.yes_fair_price - self.priceatri.yes_best_price
TypeError: unsupported operand type(s) for -: 'float' and 'NoneType'
ERROR:__main__:2022-11-26 21:54:44,262:unsupported operand type(s) for -: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 517, in update
    self._get_situation()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 273, in _get_situation
    diff_fair_best_y = self.yes_fair_price - self.priceatri.yes_best_price
TypeError: unsupported operand type(s) for -: 'int' and 'NoneType'
ERROR:__main__:2022-11-26 21:54:45,289:unsupported operand type(s) for -: 'float' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 517, in update
    self._get_situation()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 273, in _get_situation
    diff_fair_best_y = self.yes_fair_price - self.priceatri.yes_best_price
TypeError: unsupported operand type(s) for -: 'float' and 'NoneType'
ERROR:__main__:2022-11-26 21:58:26,364:invalid literal for int() with base 10: 'M?'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 115, in <module>
    strat_obj_dict[i].initialise()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 492, in initialise
    self.__set_strike_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 96, in __set_strike_price
    self.strike_price = int(self.priceatri.title[29:35])
ValueError: invalid literal for int() with base 10: 'M?'
ERROR:__main__:2022-11-26 21:58:43,284:invalid literal for int() with base 10: 'M?'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 513, in update
    self.__set_strike_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 96, in __set_strike_price
    self.strike_price = int(self.priceatri.title[29:35])
ValueError: invalid literal for int() with base 10: 'M?'
ERROR:__main__:2022-11-26 21:59:54,576:invalid literal for int() with base 10: 'M?'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 513, in update
    self.__set_strike_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 96, in __set_strike_price
    self.strike_price = int(self.priceatri.title[29:35])
ValueError: invalid literal for int() with base 10: 'M?'
ERROR:__main__:2022-11-26 22:01:06,451:invalid literal for int() with base 10: 'M?'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 513, in update
    self.__set_strike_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 96, in __set_strike_price
    self.strike_price = int(self.priceatri.title[29:35])
ValueError: invalid literal for int() with base 10: 'M?'
ERROR:__main__:2022-11-26 22:02:20,995:invalid literal for int() with base 10: 'M?'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 513, in update
    self.__set_strike_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 96, in __set_strike_price
    self.strike_price = int(self.priceatri.title[29:35])
ValueError: invalid literal for int() with base 10: 'M?'
ERROR:__main__:2022-11-26 22:03:33,179:invalid literal for int() with base 10: 'M?'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 513, in update
    self.__set_strike_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 96, in __set_strike_price
    self.strike_price = int(self.priceatri.title[29:35])
ValueError: invalid literal for int() with base 10: 'M?'
ERROR:__main__:2022-11-26 22:12:09,464:'price'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\pandas\core\indexes\base.py", line 3629, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 136, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 163, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'price'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 115, in <module>
    strat_obj_dict[i].initialise()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 507, in initialise
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 433, in _keep_a_check
    self.__scalp_side("Y", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 213, in __scalp_side
    if (temp_qty > 0) and (temp_price <= self.stop_buy_upper_price) and (not self.order.is_same_order("Y", temp_price, temp_qty, "buy")) and (not self._is_myorder_best("Y")):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 301, in _is_myorder_best
    best_price = self.priceatri.yes_pending_orders["price"].iloc[0]
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\pandas\core\frame.py", line 3505, in __getitem__
    indexer = self.columns.get_loc(key)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\pandas\core\indexes\base.py", line 3631, in get_loc
    raise KeyError(key) from err
KeyError: 'price'
ERROR:__main__:2022-11-26 22:12:18,221:'price'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\pandas\core\indexes\base.py", line 3629, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 136, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 163, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'price'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 115, in <module>
    strat_obj_dict[i].initialise()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 507, in initialise
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 438, in _keep_a_check
    self.__scalp_side("N", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 231, in __scalp_side
    if (temp_qty > 0) and (temp_price <= self.stop_buy_upper_price) and (not self.order.is_same_order("N", temp_price, temp_qty, "buy")) and (not self._is_myorder_best("N")):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 304, in _is_myorder_best
    best_price = self.priceatri.no_pending_orders["price"].iloc[0]
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\pandas\core\frame.py", line 3505, in __getitem__
    indexer = self.columns.get_loc(key)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\pandas\core\indexes\base.py", line 3631, in get_loc
    raise KeyError(key) from err
KeyError: 'price'
ERROR:__main__:2022-11-26 22:12:22,169:'price'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\pandas\core\indexes\base.py", line 3629, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 136, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 163, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'price'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 523, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 433, in _keep_a_check
    self.__scalp_side("Y", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 213, in __scalp_side
    if (temp_qty > 0) and (temp_price <= self.stop_buy_upper_price) and (not self.order.is_same_order("Y", temp_price, temp_qty, "buy")) and (not self._is_myorder_best("Y")):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 301, in _is_myorder_best
    best_price = self.priceatri.yes_pending_orders["price"].iloc[0]
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\pandas\core\frame.py", line 3505, in __getitem__
    indexer = self.columns.get_loc(key)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\pandas\core\indexes\base.py", line 3631, in get_loc
    raise KeyError(key) from err
KeyError: 'price'
ERROR:__main__:2022-11-26 22:12:25,919:'price'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\pandas\core\indexes\base.py", line 3629, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 136, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 163, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'price'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 523, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 438, in _keep_a_check
    self.__scalp_side("N", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 231, in __scalp_side
    if (temp_qty > 0) and (temp_price <= self.stop_buy_upper_price) and (not self.order.is_same_order("N", temp_price, temp_qty, "buy")) and (not self._is_myorder_best("N")):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 304, in _is_myorder_best
    best_price = self.priceatri.no_pending_orders["price"].iloc[0]
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\pandas\core\frame.py", line 3505, in __getitem__
    indexer = self.columns.get_loc(key)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\pandas\core\indexes\base.py", line 3631, in get_loc
    raise KeyError(key) from err
KeyError: 'price'
ERROR:__main__:2022-11-26 22:19:23,079:'price'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\pandas\core\indexes\base.py", line 3629, in get_loc
    return self._engine.get_loc(casted_key)
  File "pandas\_libs\index.pyx", line 136, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 163, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 5198, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 5206, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'price'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 523, in update
    self.priceatri.update_priceatri()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 433, in _keep_a_check
    def _keep_a_check(self):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 213, in __scalp_side
    if (temp_qty > 0) and (temp_price <= self.stop_buy_upper_price) and (not self.order.is_same_order("Y", temp_price, temp_qty, "buy")) and (not self._is_myorder_best("Y")):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 301, in _is_myorder_best
    if not self.priceatri.yes_pending_orders.empty:
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\pandas\core\frame.py", line 3505, in __getitem__
    indexer = self.columns.get_loc(key)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\pandas\core\indexes\base.py", line 3631, in get_loc
    raise KeyError(key) from err
KeyError: 'price'
ERROR:__main__:2022-11-26 22:39:17,025:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 444, in _keep_a_check
    self.__scalp_side("Y", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 218, in __scalp_side
    if not self.order.is_same_order("Y", sell_price, sell_qty, "sell"):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 129, in is_same_order
    df = self.mybet.get_event_holdings(self.event_id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 40, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 37, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-11-26 22:42:51,980:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 495, in _keep_a_check
    self.__scalp_side("N", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 237, in __scalp_side
    self.order.cancel_all_pending_sell("N", f"{trigger},NewSellParams")
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 101, in cancel_all_pending_sell
    df = self.mybet.get_event_holdings(self.event_id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 40, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 37, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-11-26 22:47:40,997:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 490, in _keep_a_check
    self.__scalp_side("Y", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 213, in __scalp_side
    if (temp_qty > 0) and (temp_price <= self.stop_buy_upper_price) and (not self.order.is_same_order("Y", temp_price, temp_qty, "buy")) and (not self._is_myorder_best("Y")):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 129, in is_same_order
    df = self.mybet.get_event_holdings(self.event_id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 40, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 37, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-11-26 22:48:21,218:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 444, in _keep_a_check
    self.__scalp_side("Y", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 218, in __scalp_side
    if not self.order.is_same_order("Y", sell_price, sell_qty, "sell"):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 129, in is_same_order
    df = self.mybet.get_event_holdings(self.event_id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 40, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 37, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-11-26 22:53:29,998:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 490, in _keep_a_check
    self.__scalp_side("Y", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 218, in __scalp_side
    if not self.order.is_same_order("Y", sell_price, sell_qty, "sell"):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 129, in is_same_order
    df = self.mybet.get_event_holdings(self.event_id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 40, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 37, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-11-26 22:54:44,053:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 536, in update
    self._strat_status_record()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 194, in _strat_status_record
    data_dict["orders"] = self.mybet.get_event_holdings(self.event_id).to_dict("records")
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 40, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 37, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-11-26 22:59:25,783:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 531, in update
    self._set_qty()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 291, in _set_qty
    self.my_lastbuy_price_yes, self.my_lastbuy_price_no = self.mybet.get_buy_price(self.event_id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 116, in get_buy_price
    df = self.get_event_holdings(id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 40, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 37, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-11-26 23:01:59,398:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 495, in _keep_a_check
    self.__scalp_side("N", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 232, in __scalp_side
    self.order.cancel_all_pending_buy("N", f"{trigger},NewBuyParams")
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 115, in cancel_all_pending_buy
    df = self.mybet.get_event_holdings(self.event_id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 40, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 37, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-11-26 23:03:02,426:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 495, in _keep_a_check
    self.__scalp_side("N", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 237, in __scalp_side
    self.order.cancel_all_pending_sell("N", f"{trigger},NewSellParams")
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 101, in cancel_all_pending_sell
    df = self.mybet.get_event_holdings(self.event_id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 40, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 37, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-11-26 23:08:02,712:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 444, in _keep_a_check
    self.__scalp_side("Y", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 213, in __scalp_side
    if (temp_qty > 0) and (temp_price <= self.stop_buy_upper_price) and (not self.order.is_same_order("Y", temp_price, temp_qty, "buy")) and (not self._is_myorder_best("Y")):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 318, in _is_myorder_best
    if self.order.is_same_order(asset, best_price, best_qty, "buy"):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 129, in is_same_order
    df = self.mybet.get_event_holdings(self.event_id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 40, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 37, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-11-26 23:09:27,311:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 531, in update
    self._set_qty()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 285, in _set_qty
    self.holding_yes_qty, self.holding_no_qty = self.mybet.get_holding_qty(self.event_id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 66, in get_holding_qty
    df = self.get_event_holdings(id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 40, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 37, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-11-26 23:13:22,316:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 495, in _keep_a_check
    self.__scalp_side("N", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 240, in __scalp_side
    self.order.cancel_all_pending_buy("Y", f"{trigger},CancelOppSideOrders")
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 115, in cancel_all_pending_buy
    df = self.mybet.get_event_holdings(self.event_id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 40, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 37, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-11-26 23:16:48,322:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 495, in _keep_a_check
    self.__scalp_side("N", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 240, in __scalp_side
    self.order.cancel_all_pending_buy("Y", f"{trigger},CancelOppSideOrders")
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 115, in cancel_all_pending_buy
    df = self.mybet.get_event_holdings(self.event_id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 40, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 37, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-11-26 23:30:31,245:MaxAttempt(3) exhausted. User17
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\requests\models.py", line 971, in json
    return complexjson.loads(self.text, **kwargs)
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\api_caller.py", line 105, in tradex_caller
    response = req.post(url, data=body, headers=headers).json()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\requests\models.py", line 975, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 495, in _keep_a_check
    self.__scalp_side("N", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 233, in __scalp_side
    self.__send_buy_orders(f"{trigger},ScalpingNo,{set_priceqty_message}", "N", temp_price, temp_qty)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 407, in __send_buy_orders
    self.order._buy(message, "N", price, qty)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 37, in _buy
    response = self.api_obj.tradex_caller(suffix, body)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\api_caller.py", line 127, in tradex_caller
    raise Exception(f"MaxAttempt({retry_attempts}) exhausted. User{self.userid}")
Exception: MaxAttempt(3) exhausted. User17
ERROR:__main__:2022-11-26 23:30:35,969:MaxAttempt(3) exhausted. User16
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\requests\models.py", line 971, in json
    return complexjson.loads(self.text, **kwargs)
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\api_caller.py", line 105, in tradex_caller
    response = req.post(url, data=body, headers=headers).json()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\requests\models.py", line 975, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 495, in _keep_a_check
    self.__scalp_side("N", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 233, in __scalp_side
    self.__send_buy_orders(f"{trigger},ScalpingNo,{set_priceqty_message}", "N", temp_price, temp_qty)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 407, in __send_buy_orders
    self.order._buy(message, "N", price, qty)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 37, in _buy
    response = self.api_obj.tradex_caller(suffix, body)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\api_caller.py", line 127, in tradex_caller
    raise Exception(f"MaxAttempt({retry_attempts}) exhausted. User{self.userid}")
Exception: MaxAttempt(3) exhausted. User16
ERROR:__main__:2022-11-26 23:30:38,341:MaxAttempt(3) exhausted. User15
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\requests\models.py", line 971, in json
    return complexjson.loads(self.text, **kwargs)
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\api_caller.py", line 105, in tradex_caller
    response = req.post(url, data=body, headers=headers).json()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\requests\models.py", line 975, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 495, in _keep_a_check
    self.__scalp_side("N", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 233, in __scalp_side
    self.__send_buy_orders(f"{trigger},ScalpingNo,{set_priceqty_message}", "N", temp_price, temp_qty)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 407, in __send_buy_orders
    self.order._buy(message, "N", price, qty)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 37, in _buy
    response = self.api_obj.tradex_caller(suffix, body)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\api_caller.py", line 127, in tradex_caller
    raise Exception(f"MaxAttempt({retry_attempts}) exhausted. User{self.userid}")
Exception: MaxAttempt(3) exhausted. User15
ERROR:__main__:2022-11-26 23:30:44,732:MaxAttempt(3) exhausted. User12
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\requests\models.py", line 971, in json
    return complexjson.loads(self.text, **kwargs)
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\api_caller.py", line 105, in tradex_caller
    response = req.post(url, data=body, headers=headers).json()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\requests\models.py", line 975, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 449, in _keep_a_check
    self.__scalp_side("N", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 233, in __scalp_side
    self.__send_buy_orders(f"{trigger},ScalpingNo,{set_priceqty_message}", "N", temp_price, temp_qty)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 407, in __send_buy_orders
    self.order._buy(message, "N", price, qty)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 37, in _buy
    response = self.api_obj.tradex_caller(suffix, body)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\api_caller.py", line 127, in tradex_caller
    raise Exception(f"MaxAttempt({retry_attempts}) exhausted. User{self.userid}")
Exception: MaxAttempt(3) exhausted. User12
ERROR:__main__:2022-11-28 17:01:33,361:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 531, in update
    self._set_qty()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 285, in _set_qty
    self.holding_yes_qty, self.holding_no_qty = self.mybet.get_holding_qty(self.event_id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 70, in get_holding_qty
    df = self.get_event_holdings(id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 44, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 41, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-11-28 17:10:27,471:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 490, in _keep_a_check
    self.__scalp_side("Y", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 218, in __scalp_side
    if not self.order.is_same_order("Y", sell_price, sell_qty, "sell"):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 129, in is_same_order
    df = self.mybet.get_event_holdings(self.event_id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 44, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 41, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-11-29 15:45:02,803:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 531, in update
    self._set_qty()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 285, in _set_qty
    self.holding_yes_qty, self.holding_no_qty = self.mybet.get_holding_qty(self.event_id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 70, in get_holding_qty
    df = self.get_event_holdings(id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 44, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 41, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-11-29 17:45:36,218:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 531, in update
    self._set_qty()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 287, in _set_qty
    self.my_avgbuy_price_yes, self.my_avgsell_price_yes, self.my_avgbuy_price_no, self.my_avgsell_price_no, self.falseavgbuyyes, self.falseavgbuyno = self.trans.get_avg_buysell_price(
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\transactions.py", line 171, in get_avg_buysell_price
    remove_yes_qty, remove_yes_amount = self._get_unfilled_qty_n_amount(event_id, "Y")
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\transactions.py", line 256, in _get_unfilled_qty_n_amount
    bets_df = self.mybet.get_event_holdings(eid)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 44, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 41, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-11-29 23:01:28,584:MaxAttempt(3) exhausted. User0
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\requests\models.py", line 971, in json
    return complexjson.loads(self.text, **kwargs)
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\api_caller.py", line 105, in tradex_caller
    response = req.post(url, data=body, headers=headers).json()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\requests\models.py", line 975, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 492, in _keep_a_check
    self.__scalp_side("Y", trigger, pausebuy=True)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 220, in __scalp_side
    self.__send_all_sell(f"{trigger},SellingBoughtQty,{set_priceqty_message}", "Y", sell_price, sell_qty)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 411, in __send_all_sell
    self.order._sell(message, "Y", sell_price, sell_qty)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 56, in _sell
    response = self.api_obj.tradex_caller(suffix, body)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\api_caller.py", line 127, in tradex_caller
    raise Exception(f"MaxAttempt({retry_attempts}) exhausted. User{self.userid}")
Exception: MaxAttempt(3) exhausted. User0
ERROR:__main__:2022-11-30 17:10:46,127:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 490, in _keep_a_check
    self.__scalp_side("Y", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 218, in __scalp_side
    if not self.order.is_same_order("Y", sell_price, sell_qty, "sell"):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 129, in is_same_order
    df = self.mybet.get_event_holdings(self.event_id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 44, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 41, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-11-30 18:51:55,917:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 497, in _keep_a_check
    self.__scalp_side("N", trigger, pausebuy=True)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 237, in __scalp_side
    self.order.cancel_all_pending_sell("N", f"{trigger},NewSellParams")
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 101, in cancel_all_pending_sell
    df = self.mybet.get_event_holdings(self.event_id)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 44, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 41, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-12-03 19:16:09,197:local variable 'portfolio_dict' referenced before assignment
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 531, in update
    self._set_qty()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 287, in _set_qty
    self.my_avgbuy_price_yes, self.my_avgsell_price_yes, self.my_avgbuy_price_no, self.my_avgsell_price_no, self.falseavgbuyyes, self.falseavgbuyno = self.trans.get_avg_buysell_price(
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\transactions.py", line 177, in get_avg_buysell_price
    remove_no_qty, remove_no_amount = self._get_unfilled_qty_n_amount(event_id, "N")
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\transactions.py", line 256, in _get_unfilled_qty_n_amount
    bets_df = self.mybet.get_event_holdings(eid)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 44, in get_event_holdings
    port_dict = self._get_portfolio_dict()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\mybets.py", line 41, in _get_portfolio_dict
    return portfolio_dict
UnboundLocalError: local variable 'portfolio_dict' referenced before assignment
ERROR:__main__:2022-12-03 23:00:23,473:MaxAttempt(3) exhausted. User0
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\requests\models.py", line 971, in json
    return complexjson.loads(self.text, **kwargs)
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\api_caller.py", line 105, in tradex_caller
    response = req.post(url, data=body, headers=headers).json()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\requests\models.py", line 975, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 534, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 446, in _keep_a_check
    self.__scalp_side("Y", trigger, pausebuy=True)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 222, in __scalp_side
    self.order.cancel_all_pending_buy("N", f"{trigger},CancelOppSideOrders")
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 123, in cancel_all_pending_buy
    self._cancel_buy(message=message,
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 74, in _cancel_buy
    response = self.api_obj.tradex_caller(suffix, body)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\api_caller.py", line 127, in tradex_caller
    raise Exception(f"MaxAttempt({retry_attempts}) exhausted. User{self.userid}")
Exception: MaxAttempt(3) exhausted. User0
ERROR:__main__:2022-12-04 17:38:15,866:unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 115, in <module>
    strat_obj_dict[i].initialise()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 555, in initialise
    self.__set_fair_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 118, in __set_fair_price
    self.yes_fair_price = (self.priceatri.yes_best_price + self.yes_fair_price) / 2
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
ERROR:__main__:2022-12-04 17:38:17,481:unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 115, in <module>
    strat_obj_dict[i].initialise()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 555, in initialise
    self.__set_fair_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 118, in __set_fair_price
    self.yes_fair_price = (self.priceatri.yes_best_price + self.yes_fair_price) / 2
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
ERROR:__main__:2022-12-04 17:38:18,790:unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 115, in <module>
    strat_obj_dict[i].initialise()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 555, in initialise
    self.__set_fair_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 118, in __set_fair_price
    self.yes_fair_price = (self.priceatri.yes_best_price + self.yes_fair_price) / 2
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
ERROR:__main__:2022-12-04 17:38:20,258:unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 115, in <module>
    strat_obj_dict[i].initialise()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 555, in initialise
    self.__set_fair_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 118, in __set_fair_price
    self.yes_fair_price = (self.priceatri.yes_best_price + self.yes_fair_price) / 2
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
ERROR:__main__:2022-12-04 17:38:21,608:unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 577, in update
    self.__set_fair_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 118, in __set_fair_price
    self.yes_fair_price = (self.priceatri.yes_best_price + self.yes_fair_price) / 2
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
ERROR:__main__:2022-12-04 17:38:22,614:unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 577, in update
    self.__set_fair_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 118, in __set_fair_price
    self.yes_fair_price = (self.priceatri.yes_best_price + self.yes_fair_price) / 2
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
ERROR:__main__:2022-12-04 17:38:24,019:unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 577, in update
    self.__set_fair_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 118, in __set_fair_price
    self.yes_fair_price = (self.priceatri.yes_best_price + self.yes_fair_price) / 2
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
ERROR:__main__:2022-12-04 17:38:25,465:unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 577, in update
    self.__set_fair_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 118, in __set_fair_price
    self.yes_fair_price = (self.priceatri.yes_best_price + self.yes_fair_price) / 2
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
ERROR:__main__:2022-12-04 18:05:14,885:unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 115, in <module>
    strat_obj_dict[i].initialise()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 561, in initialise
    self.__set_fair_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 119, in __set_fair_price
    self.yes_fair_price = (self.priceatri.yes_best_price + self.yes_fair_price) / 2
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
ERROR:__main__:2022-12-04 18:05:16,427:unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 115, in <module>
    strat_obj_dict[i].initialise()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 561, in initialise
    self.__set_fair_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 119, in __set_fair_price
    self.yes_fair_price = (self.priceatri.yes_best_price + self.yes_fair_price) / 2
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
ERROR:__main__:2022-12-04 18:05:17,748:unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 115, in <module>
    strat_obj_dict[i].initialise()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 561, in initialise
    self.__set_fair_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 119, in __set_fair_price
    self.yes_fair_price = (self.priceatri.yes_best_price + self.yes_fair_price) / 2
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
ERROR:__main__:2022-12-04 18:05:19,195:unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 115, in <module>
    strat_obj_dict[i].initialise()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 561, in initialise
    self.__set_fair_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 119, in __set_fair_price
    self.yes_fair_price = (self.priceatri.yes_best_price + self.yes_fair_price) / 2
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
ERROR:__main__:2022-12-04 18:05:20,101:unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 583, in update
    self.__set_fair_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 119, in __set_fair_price
    self.yes_fair_price = (self.priceatri.yes_best_price + self.yes_fair_price) / 2
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
ERROR:__main__:2022-12-04 18:05:20,995:unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 583, in update
    self.__set_fair_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 119, in __set_fair_price
    self.yes_fair_price = (self.priceatri.yes_best_price + self.yes_fair_price) / 2
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
ERROR:__main__:2022-12-04 18:05:22,273:unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 583, in update
    self.__set_fair_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 119, in __set_fair_price
    self.yes_fair_price = (self.priceatri.yes_best_price + self.yes_fair_price) / 2
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
ERROR:__main__:2022-12-04 18:05:23,571:unsupported operand type(s) for +: 'int' and 'NoneType'
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 583, in update
    self.__set_fair_price()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 119, in __set_fair_price
    self.yes_fair_price = (self.priceatri.yes_best_price + self.yes_fair_price) / 2
TypeError: unsupported operand type(s) for +: 'int' and 'NoneType'
ERROR:__main__:2022-12-04 23:00:38,680:MaxAttempt(3) exhausted. User0
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\requests\models.py", line 971, in json
    return complexjson.loads(self.text, **kwargs)
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\api_caller.py", line 105, in tradex_caller
    response = req.post(url, data=body, headers=headers).json()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\requests\models.py", line 975, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 589, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 502, in _keep_a_check
    self.__scalp_side("N", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 253, in __scalp_side
    self.__send_buy_orders(f"{trigger},ScalpingNo,{set_priceqty_message}", "N", temp_price, temp_qty)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 460, in __send_buy_orders
    self.order._buy(message, "N", price, qty)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 37, in _buy
    response = self.api_obj.tradex_caller(suffix, body)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\api_caller.py", line 127, in tradex_caller
    raise Exception(f"MaxAttempt({retry_attempts}) exhausted. User{self.userid}")
Exception: MaxAttempt(3) exhausted. User0
ERROR:__main__:2022-12-05 23:00:56,660:MaxAttempt(3) exhausted. User0
Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\requests\models.py", line 971, in json
    return complexjson.loads(self.text, **kwargs)
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\__init__.py", line 346, in loads
    return _default_decoder.decode(s)
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "C:\Users\aniru\AppData\Local\Programs\Python\Python310\lib\json\decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\api_caller.py", line 105, in tradex_caller
    response = req.post(url, data=body, headers=headers).json()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\venv\lib\site-packages\requests\models.py", line 975, in json
    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)
requests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\main_strategy_run.py", line 128, in <module>
    strat_obj_dict[j].update()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 589, in update
    self._keep_a_check()
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 548, in _keep_a_check
    self.__scalp_side("N", trigger, pausebuy=False)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 253, in __scalp_side
    self.__send_buy_orders(f"{trigger},ScalpingNo,{set_priceqty_message}", "N", temp_price, temp_qty)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\strat7.py", line 460, in __send_buy_orders
    self.order._buy(message, "N", price, qty)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\order.py", line 37, in _buy
    response = self.api_obj.tradex_caller(suffix, body)
  File "D:\Synced folder 2\tradex_opinionTrading\codes_2\api_caller.py", line 127, in tradex_caller
    raise Exception(f"MaxAttempt({retry_attempts}) exhausted. User{self.userid}")
Exception: MaxAttempt(3) exhausted. User0
